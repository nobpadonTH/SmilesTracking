// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using ThailandpostTracking.Models;

namespace ThailandpostTracking.Data
{
    public partial class AppDBContext : DbContext
    {
        public AppDBContext()
        {
        }

        public AppDBContext(DbContextOptions<AppDBContext> options)
            : base(options)
        {
        }

        public virtual DbSet<TmpImportTracking> TmpImportTrackings { get; set; }
        public virtual DbSet<TrackingBatch> TrackingBatches { get; set; }
        public virtual DbSet<TrackingDetail> TrackingDetails { get; set; }
        public virtual DbSet<TrackingHeader> TrackingHeaders { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.UseCollation("Thai_100_CI_AI");

            modelBuilder.Entity<TmpImportTracking>(entity =>
            {
                entity.Property(e => e.TmpImportTrackingId).ValueGeneratedNever();
            });

            modelBuilder.Entity<TrackingBatch>(entity =>
            {
                entity.Property(e => e.TrackingBatchId).ValueGeneratedNever();

                entity.Property(e => e.TrackingBatchTypeId).HasComment("1 Insert,2 Upsert ");
            });

            modelBuilder.Entity<TrackingDetail>(entity =>
            {
                entity.Property(e => e.TrackingDetailId).ValueGeneratedNever();

                entity.HasOne(d => d.TrackingBatch)
                    .WithMany(p => p.TrackingDetails)
                    .HasForeignKey(d => d.TrackingBatchId)
                    .HasConstraintName("FK_TrackingDetail_TrackingBatch");

                entity.HasOne(d => d.TrackingHeader)
                    .WithMany(p => p.TrackingDetails)
                    .HasForeignKey(d => d.TrackingHeaderId)
                    .HasConstraintName("FK_TrackingDetail_TrackingHeader");
            });

            modelBuilder.Entity<TrackingHeader>(entity =>
            {
                entity.Property(e => e.TrackingHeaderId).ValueGeneratedNever();

                entity.HasOne(d => d.TrackingBatch)
                    .WithMany(p => p.TrackingHeaders)
                    .HasForeignKey(d => d.TrackingBatchId)
                    .HasConstraintName("FK_TrackingHeader_TrackingBatch");
            });

            OnModelCreatingGeneratedProcedures(modelBuilder);
            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}